{"ast":null,"code":"import _slicedToArray from \"E:/port/Port/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useState } from 'react';\nvar area = 48;\nexport var Burger = function Burger(_ref) {\n  var _ref$color = _ref.color,\n    color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n    _ref$direction = _ref.direction,\n    direction = _ref$direction === void 0 ? 'left' : _ref$direction,\n    _ref$distance = _ref.distance,\n    distance = _ref$distance === void 0 ? 'md' : _ref$distance,\n    _ref$duration = _ref.duration,\n    duration = _ref$duration === void 0 ? 0.4 : _ref$duration,\n    _ref$easing = _ref.easing,\n    easing = _ref$easing === void 0 ? 'cubic-bezier(0, 0, 0, 1)' : _ref$easing,\n    _ref$hideOutline = _ref.hideOutline,\n    hideOutline = _ref$hideOutline === void 0 ? true : _ref$hideOutline,\n    label = _ref.label,\n    _ref$lines = _ref.lines,\n    lines = _ref$lines === void 0 ? 3 : _ref$lines,\n    onToggle = _ref.onToggle,\n    render = _ref.render,\n    _ref$rounded = _ref.rounded,\n    rounded = _ref$rounded === void 0 ? false : _ref$rounded,\n    _ref$size = _ref.size,\n    size = _ref$size === void 0 ? 32 : _ref$size,\n    toggle = _ref.toggle,\n    toggled = _ref.toggled;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    toggledInternal = _useState2[0],\n    toggleInternal = _useState2[1];\n  var width = Math.max(12, Math.min(area, size));\n  var room = Math.round((area - width) / 2);\n  var barHeightRaw = width / 12;\n  var barHeight = Math.round(barHeightRaw);\n  var space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n  var marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n  var margin = Math.round(marginRaw);\n  var height = barHeight * lines + margin * (lines - 1);\n  var topOffset = Math.round((area - height) / 2);\n  var translate = lines === 3 ? distance === 'lg' ? 4.0425 : distance === 'sm' ? 5.1625 : 4.6325 : distance === 'lg' ? 6.7875 : distance === 'sm' ? 8.4875 : 7.6675;\n  var deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n  var move = parseFloat((width / translate - deviation / (4 / 3)).toFixed(2));\n  var time = Math.max(0, duration);\n  var burgerStyles = {\n    cursor: 'pointer',\n    height: \"\".concat(area, \"px\"),\n    position: 'relative',\n    transition: \"\".concat(time, \"s \").concat(easing),\n    userSelect: 'none',\n    width: \"\".concat(area, \"px\")\n  };\n  var barStyles = {\n    background: color,\n    height: \"\".concat(barHeight, \"px\"),\n    left: \"\".concat(room, \"px\"),\n    position: 'absolute'\n  };\n  if (hideOutline) {\n    burgerStyles['outline'] = 'none';\n  }\n  if (rounded) {\n    barStyles['borderRadius'] = '9em';\n  }\n  var toggleFunction = toggle || toggleInternal;\n  var isToggled = toggled !== undefined ? toggled : toggledInternal;\n  var handler = function handler() {\n    toggleFunction(!isToggled);\n    if (typeof onToggle === 'function') onToggle(!isToggled);\n  };\n  return render({\n    barHeight: barHeight,\n    barStyles: barStyles,\n    burgerStyles: burgerStyles,\n    easing: easing,\n    handler: handler,\n    isLeft: direction === 'left',\n    isToggled: isToggled,\n    label: label,\n    margin: margin,\n    move: move,\n    time: time,\n    topOffset: topOffset,\n    width: width\n  });\n};","map":{"version":3,"names":["useState","area","Burger","_ref","_ref$color","color","_ref$direction","direction","_ref$distance","distance","_ref$duration","duration","_ref$easing","easing","_ref$hideOutline","hideOutline","label","_ref$lines","lines","onToggle","render","_ref$rounded","rounded","_ref$size","size","toggle","toggled","_useState","_useState2","_slicedToArray","toggledInternal","toggleInternal","width","Math","max","min","room","round","barHeightRaw","barHeight","space","marginRaw","margin","height","topOffset","translate","deviation","move","parseFloat","toFixed","time","burgerStyles","cursor","concat","position","transition","userSelect","barStyles","background","left","toggleFunction","isToggled","undefined","handler","isLeft"],"sources":["E:/port/Port/node_modules/hamburger-react/dist-esm/Burger.js"],"sourcesContent":["import { useState } from 'react';\nconst area = 48;\nexport const Burger = ({\n  color = 'currentColor',\n  direction = 'left',\n  distance = 'md',\n  duration = 0.4,\n  easing = 'cubic-bezier(0, 0, 0, 1)',\n  hideOutline = true,\n  label,\n  lines = 3,\n  onToggle,\n  render,\n  rounded = false,\n  size = 32,\n  toggle,\n  toggled\n}) => {\n  const [toggledInternal, toggleInternal] = useState(false);\n  const width = Math.max(12, Math.min(area, size));\n  const room = Math.round((area - width) / 2);\n  const barHeightRaw = width / 12;\n  const barHeight = Math.round(barHeightRaw);\n  const space = distance === 'lg' ? 0.25 : distance === 'sm' ? 0.75 : 0.5;\n  const marginRaw = width / (lines * (space + (lines === 3 ? 1 : 1.25)));\n  const margin = Math.round(marginRaw);\n  const height = barHeight * lines + margin * (lines - 1);\n  const topOffset = Math.round((area - height) / 2);\n  const translate = lines === 3 ? distance === 'lg' ? 4.0425 : distance === 'sm' ? 5.1625 : 4.6325 : distance === 'lg' ? 6.7875 : distance === 'sm' ? 8.4875 : 7.6675;\n  const deviation = (barHeightRaw - barHeight + (marginRaw - margin)) / (lines === 3 ? 1 : 2);\n  const move = parseFloat((width / translate - deviation / (4 / 3)).toFixed(2));\n  const time = Math.max(0, duration);\n  const burgerStyles = {\n    cursor: 'pointer',\n    height: `${area}px`,\n    position: 'relative',\n    transition: `${time}s ${easing}`,\n    userSelect: 'none',\n    width: `${area}px`\n  };\n  const barStyles = {\n    background: color,\n    height: `${barHeight}px`,\n    left: `${room}px`,\n    position: 'absolute'\n  };\n\n  if (hideOutline) {\n    burgerStyles['outline'] = 'none';\n  }\n\n  if (rounded) {\n    barStyles['borderRadius'] = '9em';\n  }\n\n  const toggleFunction = toggle || toggleInternal;\n  const isToggled = toggled !== undefined ? toggled : toggledInternal;\n\n  const handler = () => {\n    toggleFunction(!isToggled);\n    if (typeof onToggle === 'function') onToggle(!isToggled);\n  };\n\n  return render({\n    barHeight,\n    barStyles,\n    burgerStyles,\n    easing,\n    handler,\n    isLeft: direction === 'left',\n    isToggled,\n    label,\n    margin,\n    move,\n    time,\n    topOffset,\n    width\n  });\n};"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,IAAMC,IAAI,GAAG,EAAE;AACf,OAAO,IAAMC,MAAM,GAAG,SAATA,MAAMA,CAAAC,IAAA,EAeb;EAAA,IAAAC,UAAA,GAAAD,IAAA,CAdJE,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,cAAc,GAAAA,UAAA;IAAAE,cAAA,GAAAH,IAAA,CACtBI,SAAS;IAATA,SAAS,GAAAD,cAAA,cAAG,MAAM,GAAAA,cAAA;IAAAE,aAAA,GAAAL,IAAA,CAClBM,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,IAAI,GAAAA,aAAA;IAAAE,aAAA,GAAAP,IAAA,CACfQ,QAAQ;IAARA,QAAQ,GAAAD,aAAA,cAAG,GAAG,GAAAA,aAAA;IAAAE,WAAA,GAAAT,IAAA,CACdU,MAAM;IAANA,MAAM,GAAAD,WAAA,cAAG,0BAA0B,GAAAA,WAAA;IAAAE,gBAAA,GAAAX,IAAA,CACnCY,WAAW;IAAXA,WAAW,GAAAD,gBAAA,cAAG,IAAI,GAAAA,gBAAA;IAClBE,KAAK,GAAAb,IAAA,CAALa,KAAK;IAAAC,UAAA,GAAAd,IAAA,CACLe,KAAK;IAALA,KAAK,GAAAD,UAAA,cAAG,CAAC,GAAAA,UAAA;IACTE,QAAQ,GAAAhB,IAAA,CAARgB,QAAQ;IACRC,MAAM,GAAAjB,IAAA,CAANiB,MAAM;IAAAC,YAAA,GAAAlB,IAAA,CACNmB,OAAO;IAAPA,OAAO,GAAAD,YAAA,cAAG,KAAK,GAAAA,YAAA;IAAAE,SAAA,GAAApB,IAAA,CACfqB,IAAI;IAAJA,IAAI,GAAAD,SAAA,cAAG,EAAE,GAAAA,SAAA;IACTE,MAAM,GAAAtB,IAAA,CAANsB,MAAM;IACNC,OAAO,GAAAvB,IAAA,CAAPuB,OAAO;EAEP,IAAAC,SAAA,GAA0C3B,QAAQ,CAAC,KAAK,CAAC;IAAA4B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlDG,eAAe,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EACtC,IAAMI,KAAK,GAAGC,IAAI,CAACC,GAAG,CAAC,EAAE,EAAED,IAAI,CAACE,GAAG,CAAClC,IAAI,EAAEuB,IAAI,CAAC,CAAC;EAChD,IAAMY,IAAI,GAAGH,IAAI,CAACI,KAAK,CAAC,CAACpC,IAAI,GAAG+B,KAAK,IAAI,CAAC,CAAC;EAC3C,IAAMM,YAAY,GAAGN,KAAK,GAAG,EAAE;EAC/B,IAAMO,SAAS,GAAGN,IAAI,CAACI,KAAK,CAACC,YAAY,CAAC;EAC1C,IAAME,KAAK,GAAG/B,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAGA,QAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,GAAG;EACvE,IAAMgC,SAAS,GAAGT,KAAK,IAAId,KAAK,IAAIsB,KAAK,IAAItB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC;EACtE,IAAMwB,MAAM,GAAGT,IAAI,CAACI,KAAK,CAACI,SAAS,CAAC;EACpC,IAAME,MAAM,GAAGJ,SAAS,GAAGrB,KAAK,GAAGwB,MAAM,IAAIxB,KAAK,GAAG,CAAC,CAAC;EACvD,IAAM0B,SAAS,GAAGX,IAAI,CAACI,KAAK,CAAC,CAACpC,IAAI,GAAG0C,MAAM,IAAI,CAAC,CAAC;EACjD,IAAME,SAAS,GAAG3B,KAAK,KAAK,CAAC,GAAGT,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAGA,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAG,MAAM,GAAGA,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAGA,QAAQ,KAAK,IAAI,GAAG,MAAM,GAAG,MAAM;EACnK,IAAMqC,SAAS,GAAG,CAACR,YAAY,GAAGC,SAAS,IAAIE,SAAS,GAAGC,MAAM,CAAC,KAAKxB,KAAK,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;EAC3F,IAAM6B,IAAI,GAAGC,UAAU,CAAC,CAAChB,KAAK,GAAGa,SAAS,GAAGC,SAAS,IAAI,CAAC,GAAG,CAAC,CAAC,EAAEG,OAAO,CAAC,CAAC,CAAC,CAAC;EAC7E,IAAMC,IAAI,GAAGjB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAEvB,QAAQ,CAAC;EAClC,IAAMwC,YAAY,GAAG;IACnBC,MAAM,EAAE,SAAS;IACjBT,MAAM,KAAAU,MAAA,CAAKpD,IAAI,OAAI;IACnBqD,QAAQ,EAAE,UAAU;IACpBC,UAAU,KAAAF,MAAA,CAAKH,IAAI,QAAAG,MAAA,CAAKxC,MAAM,CAAE;IAChC2C,UAAU,EAAE,MAAM;IAClBxB,KAAK,KAAAqB,MAAA,CAAKpD,IAAI;EAChB,CAAC;EACD,IAAMwD,SAAS,GAAG;IAChBC,UAAU,EAAErD,KAAK;IACjBsC,MAAM,KAAAU,MAAA,CAAKd,SAAS,OAAI;IACxBoB,IAAI,KAAAN,MAAA,CAAKjB,IAAI,OAAI;IACjBkB,QAAQ,EAAE;EACZ,CAAC;EAED,IAAIvC,WAAW,EAAE;IACfoC,YAAY,CAAC,SAAS,CAAC,GAAG,MAAM;EAClC;EAEA,IAAI7B,OAAO,EAAE;IACXmC,SAAS,CAAC,cAAc,CAAC,GAAG,KAAK;EACnC;EAEA,IAAMG,cAAc,GAAGnC,MAAM,IAAIM,cAAc;EAC/C,IAAM8B,SAAS,GAAGnC,OAAO,KAAKoC,SAAS,GAAGpC,OAAO,GAAGI,eAAe;EAEnE,IAAMiC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;IACpBH,cAAc,CAAC,CAACC,SAAS,CAAC;IAC1B,IAAI,OAAO1C,QAAQ,KAAK,UAAU,EAAEA,QAAQ,CAAC,CAAC0C,SAAS,CAAC;EAC1D,CAAC;EAED,OAAOzC,MAAM,CAAC;IACZmB,SAAS,EAATA,SAAS;IACTkB,SAAS,EAATA,SAAS;IACTN,YAAY,EAAZA,YAAY;IACZtC,MAAM,EAANA,MAAM;IACNkD,OAAO,EAAPA,OAAO;IACPC,MAAM,EAAEzD,SAAS,KAAK,MAAM;IAC5BsD,SAAS,EAATA,SAAS;IACT7C,KAAK,EAALA,KAAK;IACL0B,MAAM,EAANA,MAAM;IACNK,IAAI,EAAJA,IAAI;IACJG,IAAI,EAAJA,IAAI;IACJN,SAAS,EAATA,SAAS;IACTZ,KAAK,EAALA;EACF,CAAC,CAAC;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}